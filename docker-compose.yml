version: "3.8"
services:
  zookeeper:
    image: debezium/zookeeper:1.6
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: debezium/kafka:1.6
    container_name: kafka
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9092:9092
    depends_on:
      - zookeeper

  connect:
    image: debezium/connect:1.6
    container_name: connect
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8083:8083
    depends_on:
      - zookeeper
      - kafka
      - db

    # docker exec -it connect bash
    # curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json" connect:8083/connectors/ -d '{ "name": "cqrs-connector","config": {"connector.class": "io.debezium.connector.sqlserver.SqlServerConnector","database.hostname": "db","database.port": "1433","database.user": "sa","database.password": "P@ssW0rd!","database.dbname": "CQRSwithCDC_Write","database.server.name": "CQRSwithCDC_Write","table.include.list": "dbo.Students,dbo.Courses,dbo.Disenrollments,dbo.Enrollments","database.history.kafka.bootstrap.servers": "kafka:9092","database.history.kafka.topic": "dbhistory.CQRSwithCDC_Write" } }'

    # to validate something work => curl -H "Accept:application/json" connect:8083/connectors/
    # output should be => ["cqrs-connector"]

  db:
    build:
      dockerfile: Dockerfile.sqlserver
      context: .
    container_name: db
    environment:
      SA_PASSWORD: "P@ssW0rd!"
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "true"
    ports:
      - 1433:1433

  # docker exec -it db /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P P@ssW0rd! -i ./CreateDbWrite.sql
  # output should be =>
  # Changed database context to 'master'.
  # Changed database context to 'CQRSwithCDC_Write'.
  # Changed database context to 'master'.
  # Changed database context to 'CQRSwithCDC_Write'.
  # Job 'cdc.CQRSwithCDC_Write_capture' started successfully.
  # Job 'cdc.CQRSwithCDC_Write_cleanup' started successfully.
